<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Machine.Fakes.Adapters.FakeItEasy</name>
    </assembly>
    <members>
        <member name="T:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyEngine">
            <summary>
            An implementation of <see cref="T:Machine.Fakes.IFakeEngine"/>  using the FakeItEasy framework.
            </summary>
        </member>
        <member name="M:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyEngine.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyEngine.CreateFake(System.Type,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyEngine.PartialMock``1(System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyEngine.OnSetUpQueryBehaviorFor``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <inheritdoc/>
        </member>
        <member name="M:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyEngine.OnSetUpCommandBehaviorFor``1(``0,System.Linq.Expressions.Expression{System.Action{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyEngine.OnVerifyBehaviorWasExecuted``1(``0,System.Linq.Expressions.Expression{System.Action{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyEngine.OnVerifyBehaviorWasNotExecuted``1(``0,System.Linq.Expressions.Expression{System.Action{``0}})">
            <inheritdoc/>
        </member>
        <member name="T:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyExpressionRewriter">
            <summary>
            Functionality to transform the inline constraint format used by Machine.Fakes
            into the specific format used by FakeItEasy.
            </summary>
        </member>
        <member name="M:Machine.Fakes.Adapters.FakeItEasy.FakeItEasyExpressionRewriter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Machine.Fakes.WithFakes">
            <summary>
            Base class for the simpler cases than <see cref="T:Machine.Fakes.WithSubject`1"/>. 
            This class only contains the shortcuts for creating fakes via "An" and "Some".
            </summary>
        </member>
        <member name="T:Machine.Fakes.WithSubject`1">
            <summary>
            Base class that adds auto mocking (grasp), I mean auto faking capabilities
            to Machine.Specifications. 
            </summary>
            <typeparam name="TSubject">
            The subject for the specification. This is the type that is created by the
            specification for you.
            </typeparam>
        </member>
    </members>
</doc>
